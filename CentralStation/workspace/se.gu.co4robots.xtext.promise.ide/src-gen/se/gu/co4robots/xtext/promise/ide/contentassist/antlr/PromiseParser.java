/*
 * generated by Xtext 2.12.0
 */
package se.gu.co4robots.xtext.promise.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import se.gu.co4robots.xtext.promise.ide.contentassist.antlr.internal.InternalPromiseParser;
import se.gu.co4robots.xtext.promise.services.PromiseGrammarAccess;

public class PromiseParser extends AbstractContentAssistParser {

	@Inject
	private PromiseGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalPromiseParser createParser() {
		InternalPromiseParser result = new InternalPromiseParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getOperatorAccess().getAlternatives(), "rule__Operator__Alternatives");
					put(grammarAccess.getTasksAccess().getAlternatives(), "rule__Tasks__Alternatives");
					put(grammarAccess.getTaskCombinationOpAccess().getAlternatives_3_0(), "rule__TaskCombinationOp__Alternatives_3_0");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getMissionAccess().getGroup(), "rule__Mission__Group__0");
					put(grammarAccess.getMissionAccess().getGroup_2(), "rule__Mission__Group_2__0");
					put(grammarAccess.getMissionAccess().getGroup_2_2(), "rule__Mission__Group_2_2__0");
					put(grammarAccess.getMissionAccess().getGroup_2_2_2(), "rule__Mission__Group_2_2_2__0");
					put(grammarAccess.getMissionAccess().getGroup_2_3(), "rule__Mission__Group_2_3__0");
					put(grammarAccess.getMissionAccess().getGroup_2_3_2(), "rule__Mission__Group_2_3_2__0");
					put(grammarAccess.getMissionAccess().getGroup_5(), "rule__Mission__Group_5__0");
					put(grammarAccess.getMissionAccess().getGroup_6(), "rule__Mission__Group_6__0");
					put(grammarAccess.getMissionAccess().getGroup_6_2(), "rule__Mission__Group_6_2__0");
					put(grammarAccess.getMissionAccess().getGroup_10(), "rule__Mission__Group_10__0");
					put(grammarAccess.getEventAccess().getGroup(), "rule__Event__Group__0");
					put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
					put(grammarAccess.getFallBackOpAccess().getGroup(), "rule__FallBackOp__Group__0");
					put(grammarAccess.getFallBackOpAccess().getGroup_3(), "rule__FallBackOp__Group_3__0");
					put(grammarAccess.getSequenceOpAccess().getGroup(), "rule__SequenceOp__Group__0");
					put(grammarAccess.getSequenceOpAccess().getGroup_3(), "rule__SequenceOp__Group_3__0");
					put(grammarAccess.getParallelOpAccess().getGroup(), "rule__ParallelOp__Group__0");
					put(grammarAccess.getParallelOpAccess().getGroup_3(), "rule__ParallelOp__Group_3__0");
					put(grammarAccess.getParallelOpAccess().getGroup_3_4(), "rule__ParallelOp__Group_3_4__0");
					put(grammarAccess.getEventHandlerOpAccess().getGroup(), "rule__EventHandlerOp__Group__0");
					put(grammarAccess.getEventHandlerOpAccess().getGroup_6(), "rule__EventHandlerOp__Group_6__0");
					put(grammarAccess.getConditionOpAccess().getGroup(), "rule__ConditionOp__Group__0");
					put(grammarAccess.getConditionOpAccess().getGroup_2(), "rule__ConditionOp__Group_2__0");
					put(grammarAccess.getDelegateOpAccess().getGroup(), "rule__DelegateOp__Group__0");
					put(grammarAccess.getDelegateOpAccess().getGroup_3(), "rule__DelegateOp__Group_3__0");
					put(grammarAccess.getDelegateOpAccess().getGroup_3_2(), "rule__DelegateOp__Group_3_2__0");
					put(grammarAccess.getDelegateOpAccess().getGroup_4(), "rule__DelegateOp__Group_4__0");
					put(grammarAccess.getDelegateOpAccess().getGroup_4_2(), "rule__DelegateOp__Group_4_2__0");
					put(grammarAccess.getDelegateOpAccess().getGroup_5(), "rule__DelegateOp__Group_5__0");
					put(grammarAccess.getDelegateOpAccess().getGroup_5_2(), "rule__DelegateOp__Group_5_2__0");
					put(grammarAccess.getTaskCombinationOpAccess().getGroup(), "rule__TaskCombinationOp__Group__0");
					put(grammarAccess.getTaskCombinationOpAccess().getGroup_3(), "rule__TaskCombinationOp__Group_3__0");
					put(grammarAccess.getEventAssignmentAccess().getGroup(), "rule__EventAssignment__Group__0");
					put(grammarAccess.getSimpleActionAccess().getGroup(), "rule__SimpleAction__Group__0");
					put(grammarAccess.getVisitAccess().getGroup(), "rule__Visit__Group__0");
					put(grammarAccess.getSequencedVisitAccess().getGroup(), "rule__SequencedVisit__Group__0");
					put(grammarAccess.getOrderderVisitAccess().getGroup(), "rule__OrderderVisit__Group__0");
					put(grammarAccess.getStrictOrderedVisitAccess().getGroup(), "rule__StrictOrderedVisit__Group__0");
					put(grammarAccess.getFairVisitAccess().getGroup(), "rule__FairVisit__Group__0");
					put(grammarAccess.getPatrollingAccess().getGroup(), "rule__Patrolling__Group__0");
					put(grammarAccess.getSequencedPatrollingAccess().getGroup(), "rule__SequencedPatrolling__Group__0");
					put(grammarAccess.getOrderedPatrollingAccess().getGroup(), "rule__OrderedPatrolling__Group__0");
					put(grammarAccess.getStrictOreredPatrollingAccess().getGroup(), "rule__StrictOreredPatrolling__Group__0");
					put(grammarAccess.getFairPatrollingAccess().getGroup(), "rule__FairPatrolling__Group__0");
					put(grammarAccess.getUpperRestrictedAvoidanceAccess().getGroup(), "rule__UpperRestrictedAvoidance__Group__0");
					put(grammarAccess.getExactRestrictedAvoidanceAccess().getGroup(), "rule__ExactRestrictedAvoidance__Group__0");
					put(grammarAccess.getLowerRestrictedAvoidanceAccess().getGroup(), "rule__LowerRestrictedAvoidance__Group__0");
					put(grammarAccess.getFutureAvoidanceAccess().getGroup(), "rule__FutureAvoidance__Group__0");
					put(grammarAccess.getGlobalAvoidanceAccess().getGroup(), "rule__GlobalAvoidance__Group__0");
					put(grammarAccess.getPastAvoidanceAccess().getGroup(), "rule__PastAvoidance__Group__0");
					put(grammarAccess.getWaitAccess().getGroup(), "rule__Wait__Group__0");
					put(grammarAccess.getDelayedReactionAccess().getGroup(), "rule__DelayedReaction__Group__0");
					put(grammarAccess.getInstantReactionAccess().getGroup(), "rule__InstantReaction__Group__0");
					put(grammarAccess.getMissionAccess().getEventsAssignment_2_2_1(), "rule__Mission__EventsAssignment_2_2_1");
					put(grammarAccess.getMissionAccess().getEventsAssignment_2_2_2_1(), "rule__Mission__EventsAssignment_2_2_2_1");
					put(grammarAccess.getMissionAccess().getActionsAssignment_2_3_1(), "rule__Mission__ActionsAssignment_2_3_1");
					put(grammarAccess.getMissionAccess().getActionsAssignment_2_3_2_1(), "rule__Mission__ActionsAssignment_2_3_2_1");
					put(grammarAccess.getMissionAccess().getRobotsAssignment_4(), "rule__Mission__RobotsAssignment_4");
					put(grammarAccess.getMissionAccess().getRobotsAssignment_5_1(), "rule__Mission__RobotsAssignment_5_1");
					put(grammarAccess.getMissionAccess().getLocationsAssignment_6_1(), "rule__Mission__LocationsAssignment_6_1");
					put(grammarAccess.getMissionAccess().getLocationsAssignment_6_2_1(), "rule__Mission__LocationsAssignment_6_2_1");
					put(grammarAccess.getMissionAccess().getOperatorAssignment_9(), "rule__Mission__OperatorAssignment_9");
					put(grammarAccess.getMissionAccess().getOperatorAssignment_10_1(), "rule__Mission__OperatorAssignment_10_1");
					put(grammarAccess.getRobotAccess().getNameAssignment(), "rule__Robot__NameAssignment");
					put(grammarAccess.getLocationAccess().getNameAssignment(), "rule__Location__NameAssignment");
					put(grammarAccess.getEventAccess().getNameAssignment_0(), "rule__Event__NameAssignment_0");
					put(grammarAccess.getEventAccess().getDescriptionAssignment_2(), "rule__Event__DescriptionAssignment_2");
					put(grammarAccess.getActionAccess().getNameAssignment_0(), "rule__Action__NameAssignment_0");
					put(grammarAccess.getActionAccess().getDescriptionAssignment_2(), "rule__Action__DescriptionAssignment_2");
					put(grammarAccess.getFallBackOpAccess().getInputOperatorsAssignment_2(), "rule__FallBackOp__InputOperatorsAssignment_2");
					put(grammarAccess.getFallBackOpAccess().getInputOperatorsAssignment_3_1(), "rule__FallBackOp__InputOperatorsAssignment_3_1");
					put(grammarAccess.getSequenceOpAccess().getInputOperatorsAssignment_2(), "rule__SequenceOp__InputOperatorsAssignment_2");
					put(grammarAccess.getSequenceOpAccess().getInputOperatorsAssignment_3_1(), "rule__SequenceOp__InputOperatorsAssignment_3_1");
					put(grammarAccess.getParallelOpAccess().getInputRobotsAssignment_3_0(), "rule__ParallelOp__InputRobotsAssignment_3_0");
					put(grammarAccess.getParallelOpAccess().getInputOperatorsAssignment_3_2(), "rule__ParallelOp__InputOperatorsAssignment_3_2");
					put(grammarAccess.getParallelOpAccess().getInputRobotsAssignment_3_4_1(), "rule__ParallelOp__InputRobotsAssignment_3_4_1");
					put(grammarAccess.getParallelOpAccess().getInputOperatorsAssignment_3_4_3(), "rule__ParallelOp__InputOperatorsAssignment_3_4_3");
					put(grammarAccess.getEventHandlerOpAccess().getInputOperatorsAssignment_4(), "rule__EventHandlerOp__InputOperatorsAssignment_4");
					put(grammarAccess.getEventHandlerOpAccess().getInputEventsAssignment_6_1(), "rule__EventHandlerOp__InputEventsAssignment_6_1");
					put(grammarAccess.getConditionOpAccess().getInputEventsAssignment_2_1(), "rule__ConditionOp__InputEventsAssignment_2_1");
					put(grammarAccess.getDelegateOpAccess().getTaskAssignment_2(), "rule__DelegateOp__TaskAssignment_2");
					put(grammarAccess.getDelegateOpAccess().getInputLocationsAssignment_3_1(), "rule__DelegateOp__InputLocationsAssignment_3_1");
					put(grammarAccess.getDelegateOpAccess().getInputLocationsAssignment_3_2_1(), "rule__DelegateOp__InputLocationsAssignment_3_2_1");
					put(grammarAccess.getDelegateOpAccess().getInputActionAssignment_4_1(), "rule__DelegateOp__InputActionAssignment_4_1");
					put(grammarAccess.getDelegateOpAccess().getInputActionAssignment_4_2_1(), "rule__DelegateOp__InputActionAssignment_4_2_1");
					put(grammarAccess.getDelegateOpAccess().getStoppingEventAssignment_5_1(), "rule__DelegateOp__StoppingEventAssignment_5_1");
					put(grammarAccess.getDelegateOpAccess().getStoppingEventAssignment_5_2_1(), "rule__DelegateOp__StoppingEventAssignment_5_2_1");
					put(grammarAccess.getTaskCombinationOpAccess().getInputOperatorsAssignment_2(), "rule__TaskCombinationOp__InputOperatorsAssignment_2");
					put(grammarAccess.getTaskCombinationOpAccess().getInputOperatorsAssignment_3_1(), "rule__TaskCombinationOp__InputOperatorsAssignment_3_1");
					put(grammarAccess.getEventAssignmentAccess().getInputEventAssignment_0(), "rule__EventAssignment__InputEventAssignment_0");
					put(grammarAccess.getEventAssignmentAccess().getInputOperatorsAssignment_2(), "rule__EventAssignment__InputOperatorsAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public PromiseGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(PromiseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
